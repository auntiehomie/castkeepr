import { Expression } from '@babel/types';
import { CallParam, TemplateParam, Params, TailProcessorParams, ValueCache } from '@wyw-in-js/processor-utils';
import { CSSInterpolation } from '@emotion/serialize';
import { B as BaseProcessor } from './base-processor-FyHksda3.js';
import { Primitive } from './keyframes.js';
import '@wyw-in-js/shared';

/**
 * @description Scope css class generation similar to css from emotion.
 *
 * @example
 * ```ts
 * import { css } from '@pigment-css/react';
 *
 * const class1 = css(({theme}) => ({
 *  color: (theme.vars || theme).palette.primary.main,
 * }))
 * ```
 *
 * <html className={class1} />
 */
declare class CssProcessor extends BaseProcessor {
    callParam: CallParam | TemplateParam;
    constructor(params: Params, ...args: TailProcessorParams);
    build(values: ValueCache): void;
    private handleTemplate;
    generateArtifacts(styleObjOrTaggged: CSSInterpolation | string[], ...args: Primitive[]): void;
    private handleCall;
    doEvaltimeReplacement(): void;
    doRuntimeReplacement(): void;
    get asSelector(): string;
    get value(): Expression;
}

export { CssProcessor };
