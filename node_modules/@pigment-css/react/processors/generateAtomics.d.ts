import { Expression } from '@babel/types';
import { Params, TailProcessorParams, ValueCache } from '@wyw-in-js/processor-utils';
import { ExpressionValue } from '@wyw-in-js/shared';
import { B as BaseProcessor } from './base-processor-FyHksda3.js';

type Atomics = {
    conditions: Record<string, string>;
    defaultCondition: string;
    properties: {
        [key: string]: string[];
    };
    shorthands: Record<string, string[]>;
    unitless: string[];
    multipliers?: Record<string, string>;
    inlineGetters: Record<string, (value: string) => string>;
};
type RuntimeConfig = {
    conditions: string[];
    styles: Record<string, Record<string, Record<string, string>>>;
    shorthands: Atomics['shorthands'];
    defaultCondition: string;
    unitless: string[];
    multipliers?: Record<string, string>;
    inlineGetters: Record<string, (value: string) => string>;
};

declare class GenerateAtomicsProcessor extends BaseProcessor {
    callParam: ExpressionValue;
    runtimeConfig?: RuntimeConfig;
    constructor(params: Params, ...args: TailProcessorParams);
    get asSelector(): string;
    get value(): Expression;
    doEvaltimeReplacement(): void;
    build(values: ValueCache): void;
    doRuntimeReplacement(): void;
}

export { GenerateAtomicsProcessor };
