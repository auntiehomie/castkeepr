{"version":3,"sources":["../src/Grid.jsx"],"names":["_a","Grid","_b"],"mappings":"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","file":"Grid.mjs","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable react/jsx-filename-extension */\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { generateAtomics } from './generateAtomics';\nimport styled from './styled';\n\nfunction isGridComponent(element) {\n  try {\n    // For server components `muiName` is avaialble in element.type._payload.value.muiName\n    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45\n    // eslint-disable-next-line no-underscore-dangle\n    return element.type.muiName === 'Grid' || element.type?._payload?.value?.muiName === 'Grid';\n  } catch (error) {\n    // Covers for the case in which the Grid is a server component and the child is a client component\n    // https://github.com/mui/material-ui/issues/43635\n    return false;\n  }\n}\n\nconst gridAtomics = generateAtomics(({ theme }) => {\n  const conditions = {};\n  Object.entries(theme.breakpoints.values)\n    .sort((a, b) => a[1] - b[1])\n    .forEach(([breakpoint, value]) => {\n      conditions[breakpoint] = `@media (min-width: ${value}${theme.breakpoints.unit ?? 'px'})`;\n    });\n  return {\n    conditions,\n    defaultCondition: theme.breakpoints?.keys?.[0],\n    properties: {\n      flexDirection: ['column', 'column-reverse', 'row', 'row-reverse'],\n      '--Grid-parent-column-count': ['--Grid-parent-column-count'],\n      '--Grid-parent-column-spacing': ['--Grid-parent-column-spacing'],\n      '--Grid-parent-row-spacing': ['--Grid-parent-row-spacing'],\n      '--Grid-self-column-span': ['--Grid-self-column-span'],\n      '--Grid-self-width': ['--Grid-self-width'],\n      '--Grid-self-max-width': ['--Grid-self-max-width'],\n      '--Grid-self-flex': ['--Grid-self-flex'],\n      '--Grid-self-column-spacing': ['--Grid-self-column-spacing'],\n      '--Grid-self-row-spacing': ['--Grid-self-row-spacing'],\n      '--Grid-self-offset': ['--Grid-self-offset'],\n      '--Grid-self-margin-left': ['--Grid-self-margin-left'],\n    },\n    unitless: ['--Grid-parent-column-count', '--Grid-self-column-span', '--Grid-self-offset'],\n    multipliers: {\n      '--Grid-parent-column-spacing': Array.isArray(theme.vars?.spacing)\n        ? theme.vars.spacing[0]\n        : theme.vars?.spacing,\n      '--Grid-parent-row-spacing': Array.isArray(theme.vars?.spacing)\n        ? theme.vars.spacing[0]\n        : theme.vars?.spacing,\n      '--Grid-self-column-spacing': Array.isArray(theme.vars?.spacing)\n        ? theme.vars.spacing[0]\n        : theme.vars?.spacing,\n      '--Grid-self-row-spacing': Array.isArray(theme.vars?.spacing)\n        ? theme.vars.spacing[0]\n        : theme.vars?.spacing,\n    },\n    inlineGetters: {\n      '--Grid-self-width': (value) => {\n        if (value === 'grow') {\n          return 'unset';\n        }\n\n        if (value === 'auto') {\n          return 'auto';\n        }\n\n        return 'var(--Grid-fixed-width)';\n      },\n      '--Grid-self-max-width': (value) => {\n        if (value === 'grow') {\n          return '100%';\n        }\n\n        if (value === 'auto') {\n          return 'none';\n        }\n\n        return 'unset';\n      },\n      '--Grid-self-flex': (value) => {\n        if (value === 'grow') {\n          return '1 1 0';\n        }\n\n        if (value === 'auto') {\n          return '0 0 auto';\n        }\n\n        return '0 1 auto';\n      },\n      '--Grid-self-margin-left': (value) => {\n        if (value === 'auto') {\n          return 'auto';\n        }\n\n        return 'var(--Grid-fixed-offset)';\n      },\n    },\n  };\n});\n\nconst GridComponent = styled('div')({\n  '--Grid-fixed-width':\n    'calc(100% * var(--Grid-self-column-span) / var(--Grid-parent-column-count) - (var(--Grid-parent-column-count) - var(--Grid-self-column-span)) * var(--Grid-parent-column-spacing) / var(--Grid-parent-column-count))',\n  '--Grid-fixed-offset':\n    'calc(100% * var(--Grid-self-offset) / var(--Grid-parent-column-count) + var(--Grid-parent-column-spacing) * var(--Grid-self-offset) / var(--Grid-parent-column-count))',\n  variants: [\n    {\n      props: { container: true },\n      style: {\n        display: 'flex',\n        gap: 'var(--Grid-self-row-spacing) var(--Grid-self-column-spacing)',\n      },\n    },\n    {\n      props: ({ size }) => size !== undefined,\n      style: {\n        width: 'var(--Grid-self-width)',\n        maxWidth: 'var(--Grid-self-max-width)',\n        flex: 'var(--Grid-self-flex)',\n      },\n    },\n    {\n      props: ({ offset }) => offset !== undefined,\n      style: {\n        marginLeft: 'var(--Grid-self-margin-left)',\n      },\n    },\n    ...['nowrap', 'wrap-reverse', 'wrap'].map((wrap) => ({\n      props: { wrap, container: true },\n      style: {\n        flexWrap: wrap,\n      },\n    })),\n  ],\n});\n\nconst Grid = React.forwardRef(function Grid(\n  {\n    children,\n    columns,\n    spacing,\n    columnSpacing,\n    rowSpacing,\n    direction = 'row',\n    style,\n    className,\n    component = 'div',\n    container = false,\n    size,\n    offset,\n    // internal props\n    // eslint-disable-next-line react/prop-types\n    unstable_parent_columns,\n    // eslint-disable-next-line react/prop-types\n    unstable_parent_column_spacing,\n    // eslint-disable-next-line react/prop-types\n    unstable_parent_row_spacing,\n    wrap = 'wrap',\n    ...other\n  },\n  ref,\n) {\n  const selfColumns = columns ?? unstable_parent_columns ?? 12;\n  const selfColumnSpacing = columnSpacing ?? spacing ?? unstable_parent_column_spacing ?? 0;\n  const selfRowSpacing = rowSpacing ?? spacing ?? unstable_parent_row_spacing ?? 0;\n\n  const gridAtomicsObj = {\n    flexDirection: direction,\n  };\n\n  if (unstable_parent_columns !== undefined) {\n    gridAtomicsObj['--Grid-parent-column-count'] = unstable_parent_columns;\n  }\n\n  if (unstable_parent_column_spacing !== undefined) {\n    gridAtomicsObj['--Grid-parent-column-spacing'] = unstable_parent_column_spacing;\n  }\n\n  if (unstable_parent_row_spacing !== undefined) {\n    gridAtomicsObj['--Grid-parent-row-spacing'] = unstable_parent_row_spacing;\n  }\n\n  if (container) {\n    gridAtomicsObj['--Grid-self-column-spacing'] = selfColumnSpacing;\n    gridAtomicsObj['--Grid-self-row-spacing'] = selfRowSpacing;\n  }\n\n  if (size) {\n    gridAtomicsObj['--Grid-self-column-span'] = size;\n    gridAtomicsObj['--Grid-self-width'] = size;\n    gridAtomicsObj['--Grid-self-max-width'] = size;\n    gridAtomicsObj['--Grid-self-flex'] = size;\n  }\n  if (offset) {\n    gridAtomicsObj['--Grid-self-offset'] = offset;\n    gridAtomicsObj['--Grid-self-margin-left'] = offset;\n  }\n\n  const ownerState = { container, size, offset, wrap };\n\n  const gridClasses = gridAtomics(gridAtomicsObj);\n  return (\n    <GridComponent\n      as={component}\n      ref={ref}\n      className={clsx(gridClasses.className, className)}\n      style={{ ...style, ...gridClasses.style }}\n      {...other}\n      ownerState={ownerState}\n    >\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child) && isGridComponent(child)) {\n          return React.cloneElement(child, {\n            unstable_parent_columns: selfColumns,\n            unstable_parent_column_spacing: selfColumnSpacing,\n            unstable_parent_row_spacing: selfRowSpacing,\n          });\n        }\n        return child;\n      })}\n    </GridComponent>\n  );\n});\n\nGrid.muiName = 'Grid';\n\nprocess.env.NODE_ENV !== 'production' &&\n  (Grid.propTypes /* remove-proptypes */ = {\n    // ┌────────────────────────────── Warning ──────────────────────────────┐\n    // │ These PropTypes are generated from the TypeScript type definitions. │\n    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n    // └─────────────────────────────────────────────────────────────────────┘\n    /**\n     * The content of the component.\n     */\n    children: PropTypes.node,\n    /**\n     * @ignore\n     */\n    className: PropTypes.string,\n    /**\n     * @ignore\n     */\n    columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([\n      PropTypes.arrayOf(PropTypes.number),\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    /**\n     * @ignore\n     */\n    columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired),\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n    /**\n     * The component used for the root node.\n     * Either a string to use a HTML element or a component.\n     */\n    component: PropTypes.elementType,\n    /**\n     * @ignore\n     */\n    container: PropTypes.bool,\n    /**\n     * @ignore\n     */\n    direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([\n      PropTypes.oneOf(['column', 'column-reverse', 'row', 'row-reverse']),\n      PropTypes.arrayOf(PropTypes.oneOf(['column', 'column-reverse', 'row', 'row-reverse'])),\n      PropTypes.object,\n    ]),\n    /**\n     * @ignore\n     */\n    offset: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([\n      PropTypes.arrayOf(PropTypes.number),\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    /**\n     * @ignore\n     */\n    rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired),\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n    /**\n     * @ignore\n     */\n    size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([\n      PropTypes.arrayOf(PropTypes.number),\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    /**\n     * @ignore\n     */\n    spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired),\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n    /**\n     * @ignore\n     */\n    style: PropTypes.object,\n    /**\n     * Defines the `flex-wrap` style property.\n     * It's applied for all screen sizes.\n     * @default 'wrap'\n     */\n    wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  });\n\nGrid.displayName = 'Grid';\n\nexport default Grid;\n"]}