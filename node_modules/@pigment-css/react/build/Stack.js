'use strict';

var chunkSBJIOOIF_js = require('./chunk-SBJIOOIF.js');
var chunkBV2JNSJM_js = require('./chunk-BV2JNSJM.js');
var chunkQMF3JN35_js = require('./chunk-QMF3JN35.js');
var clsx = require('clsx');
var PropTypes = require('prop-types');
var React = require('react');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var clsx__default = /*#__PURE__*/_interopDefault(clsx);
var PropTypes__default = /*#__PURE__*/_interopDefault(PropTypes);
var React__namespace = /*#__PURE__*/_interopNamespace(React);

/**
  * @pigment-css/react v0.0.30
  *
  * @license MIT
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
 
var stackAtomics = chunkBV2JNSJM_js.generateAtomics(({ theme }) => {
  var _a, _b, _c, _d;
  const conditions = {};
  Object.entries(theme.breakpoints.values).sort((a, b) => a[1] - b[1]).forEach(([breakpoint, value]) => {
    var _a2;
    conditions[breakpoint] = `@media (min-width: ${value}${(_a2 = theme.breakpoints.unit) != null ? _a2 : "px"})`;
  });
  return {
    conditions,
    defaultCondition: (_b = (_a = theme.breakpoints) == null ? void 0 : _a.keys) == null ? void 0 : _b[0],
    properties: {
      flexDirection: ["column", "column-reverse", "row", "row-reverse"],
      gap: ["--Stack-gap"]
    },
    shorthands: {
      direction: ["flexDirection"],
      spacing: ["gap"]
    },
    multipliers: {
      gap: Array.isArray((_c = theme.vars) == null ? void 0 : _c.spacing) ? theme.vars.spacing[0] : (_d = theme.vars) == null ? void 0 : _d.spacing
    }
  };
});
function joinChildren(children, separator) {
  const childrenArray = React__namespace.Children.toArray(children).filter(Boolean);
  return childrenArray.reduce((output, child, index) => {
    output.push(child);
    if (index < childrenArray.length - 1) {
      output.push(React__namespace.cloneElement(separator, { key: `separator-${index}` }));
    }
    return output;
  }, []);
}
var Stack = React__namespace.forwardRef(function Stack2(_a, ref) {
  var _b = _a, {
    children,
    spacing = 0,
    style,
    className,
    divider,
    component = "div",
    direction = "column"
  } = _b, other = chunkQMF3JN35_js.__objRest(_b, [
    "children",
    "spacing",
    "style",
    "className",
    "divider",
    "component",
    "direction"
  ]);
  const stackAtomicsObj = {
    direction,
    spacing
  };
  const stackClasses = stackAtomics(stackAtomicsObj);
  const Component = component;
  return /* @__PURE__ */ jsxRuntime.jsx(
    Component,
    chunkQMF3JN35_js.__spreadProps(chunkQMF3JN35_js.__spreadValues({
      ref,
      className: clsx__default.default(
        chunkSBJIOOIF_js.css({
          display: "flex"
        }),
        stackClasses.className,
        className
      ),
      style: chunkQMF3JN35_js.__spreadValues(chunkQMF3JN35_js.__spreadValues({}, style), stackClasses.style)
    }, other), {
      children: divider ? joinChildren(children, divider) : children
    })
  );
});
if (process.env.NODE_ENV !== "production") {
  Stack.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
     * The content of the component.
     */
    children: PropTypes__default.default.node,
    /**
     * @ignore
     */
    className: PropTypes__default.default.string,
    /**
     * The component used for the root node.
     * Either a string to use a HTML element or a component.
     */
    component: PropTypes__default.default.elementType,
    /**
     * @ignore
     */
    direction: PropTypes__default.default.oneOfType([
      PropTypes__default.default.oneOf(["column", "column-reverse", "row", "row-reverse"]),
      PropTypes__default.default.arrayOf(PropTypes__default.default.oneOf(["column", "column-reverse", "row", "row-reverse"])),
      PropTypes__default.default.object
    ]),
    /**
     * @ignore
     */
    divider: PropTypes__default.default.node,
    /**
     * @ignore
     */
    spacing: PropTypes__default.default.oneOfType([
      PropTypes__default.default.arrayOf(PropTypes__default.default.oneOfType([PropTypes__default.default.number, PropTypes__default.default.string]).isRequired),
      PropTypes__default.default.number,
      PropTypes__default.default.object,
      PropTypes__default.default.string
    ]),
    /**
     * @ignore
     */
    style: PropTypes__default.default.shape()
  };
}
if (Stack) {
  Stack.displayName = "Stack";
}
var Stack_default = Stack;

module.exports = Stack_default;
//# sourceMappingURL=Stack.js.map

module.exports = exports.default;
//# sourceMappingURL=Stack.js.map