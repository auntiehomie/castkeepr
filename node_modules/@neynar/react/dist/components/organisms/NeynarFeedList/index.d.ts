import { default as React } from 'react';
type FeedType = "following" | "filter";
type FeedFilterType = "fids" | "parent_url" | "channel_id" | "embed_url" | "global_trending";
type BooleanParams = true | false;
type TimeWindow = "1h" | "6h" | "12h" | "24h" | "7d";
type ForYouProvider = "openrank" | "mbd";
type TrendingFeedsProvider = "openrank" | "mbd" | "neynar";
export type FollowingQueryParams = {
    fid: number;
    viewerFid?: number;
    withRecasts?: BooleanParams;
    limit?: number;
    cursor?: string;
};
export type ForYouFeedQueryParams = {
    fid: number;
    viewerFid?: number;
    provider?: ForYouProvider;
    limit?: number;
    cursor?: string;
    providerMetadata?: string;
};
export type ChannelFeedQueryParams = {
    channelIds: string;
    withRecasts?: BooleanParams;
    viewerFid?: number;
    withReplies?: BooleanParams;
    membersOnly?: BooleanParams;
    fids?: string;
    limit?: number;
    cursor?: string;
};
export type ParentURLsFeedQueryParams = {
    parentUrls: string;
    withRecasts?: BooleanParams;
    viewerFid?: number;
    with_replies?: BooleanParams;
    limit?: number;
    cursor?: string;
};
export type FilteredFeedQueryParams = {
    feedType: FeedType;
    filterType?: FeedFilterType;
    fid?: number;
    fids?: string;
    parentUrl?: string;
    channelId?: string;
    membersOnly?: BooleanParams;
    embedUrl?: string;
    embedTypes?: string[];
    withRecasts?: BooleanParams;
    limit?: number;
    cursor?: string;
    viewerFid?: number;
};
export type FramesFeedQueryParams = {
    limit?: number;
    viewerFid?: number;
    cursor?: string;
};
export type TrendingCastsQueryParams = {
    limit?: number;
    cursor?: string;
    viewerFid?: number;
    timeWindow?: TimeWindow;
    channelId?: string;
    provider?: TrendingFeedsProvider;
    providerMetadata?: string;
};
export type FollowingPathToQueryParams = {
    "/following": FollowingQueryParams;
};
export type ForYouPathToQueryParams = {
    "/for_you": ForYouFeedQueryParams;
};
export type ChannelPathToQueryParams = {
    "/channel": ChannelFeedQueryParams;
};
export type ParentURLsPathToQueryParams = {
    "/parent_urls": ParentURLsFeedQueryParams;
};
export type FilteredPathToQueryParams = {
    "/filtered": FilteredFeedQueryParams;
};
export type FramesPathToQueryParams = {
    "/frames": FramesFeedQueryParams;
};
export type TrendingPathToQueryParams = {
    "/trending": TrendingCastsQueryParams;
};
type PathToQueryParams = FollowingPathToQueryParams | ForYouPathToQueryParams | ChannelPathToQueryParams | ParentURLsPathToQueryParams | FilteredPathToQueryParams | FramesPathToQueryParams | TrendingPathToQueryParams;
export type NeynarFeedListProps = {
    path?: string;
    params?: PathToQueryParams[keyof PathToQueryParams];
};
export declare const NeynarFeedList: React.FC<NeynarFeedListProps>;
export {};
